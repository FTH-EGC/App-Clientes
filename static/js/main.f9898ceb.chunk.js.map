{"version":3,"sources":["assets/img/Diente.svg","components/Header.js","components/Error.js","components/Formulario.js","components/Cita.js","components/Citas.js","App.js","reportWebVitals.js","index.js"],"names":["SiteHeader","styled","header","Imagen","img","Header","className","src","Diente","alt","Parrafo","p","Error","mensaje","Form","form","Inputs","input","Labels","label","TextArea","textarea","Boton","Formulario","guardarCitas","citas","editar","idpaciente","guardarEditar","useState","nombre","edad","telefono","fecha","hora","sintomas","paciente","guardarPaciente","editado","guardarEditado","error","guardarError","useEffect","Object","keys","length","datosFiltrados","find","cita","id","textoBoton","onChange","e","target","name","value","onSubmit","preventDefault","trim","some","citasAct","map","setTimeout","shortid","generate","htmlFor","type","CardCita","div","DatosFecha","Botones","BotonEditar","button","BotonEliminar","Sintomas","Cita","eliminarCita","guardarIdPaciente","onClick","TituloH2","h2","DivCitas","Citas","App","citasIniciales","JSON","parse","localStorage","getItem","setItem","stringify","document","querySelector","scrollIntoView","behavior","citaEliminada","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9898ceb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Diente.a7c106d1.svg\";","import React from 'react'\r\nimport Diente from '../assets/img/Diente.svg';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst SiteHeader = styled.header`\r\n    display: grid;\r\n    grid-template-rows: repeat(2, auto);\r\n    color: #ffffff;\r\n    text-transform: uppercase;\r\n    font-size: 1rem;\r\n    margin-top: 4rem;\r\n    text-align: center;\r\n\r\n    @media (min-width: 768px){\r\n        font-size: 1.2rem;\r\n        grid-template-rows: unset;\r\n        grid-template-columns: repeat(2,max-content);\r\n        align-items: center;\r\n        column-gap: 2rem;\r\n    }\r\n\r\n`;\r\n\r\nconst Imagen = styled.img`\r\n        max-width: 100%;\r\n        height: 7rem;\r\n        @media (min-width: 768px){\r\n            height: 10rem;\r\n        }\r\n`;\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <div className=\"header\">\r\n            <SiteHeader>\r\n                <div className=\"imagen\">\r\n                    <Imagen src={Diente} alt=\"Logo\"/>\r\n                </div>\r\n                <h1>Administrador de Citas</h1>\r\n            </SiteHeader>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Parrafo = styled.p`\r\n    color: #ed1c5b;\r\n    font-size: 1.4rem;\r\n    font-weight: 900;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n`;\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <Parrafo>{mensaje}</Parrafo>\r\n     );\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, {useState, useEffect} from 'react'\r\nimport styled from '@emotion/styled';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #ffffff;\r\n    padding: 2rem;\r\n    border-radius: 20px;\r\n    color: #5E5E5E;\r\n    max-height: 53rem;\r\n\r\n    h2{\r\n        text-align: center;\r\n\r\n    }\r\n    \r\n`;\r\n\r\nconst Inputs = styled.input`\r\n    max-width: 100%;\r\n    border: none;\r\n    border-bottom: 1px solid #8b8b8b;\r\n    height: 3rem;\r\n    &:focus{\r\n        border-bottom: 1px solid #541dd6;\r\n        outline: none;\r\n        -webkit-box-shadow: 0px 11px 17px -7px rgba(0,0,0,0.56);\r\n        -webkit-box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n        -moz-box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n        box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n    }\r\n`;\r\n\r\nconst Labels = styled.label`\r\n    margin: 1rem 0 .5rem 0;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n    height: 7rem;\r\n    margin-bottom: 2rem;\r\n    border-radius: 10px;\r\n    padding: 1rem;\r\n    &:focus{\r\n        outline: none;\r\n        -webkit-box-shadow: 0px 11px 17px -7px rgba(0,0,0,0.56);\r\n        -webkit-box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n        -moz-box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n        box-shadow: 0px 11px 17px -10px rgba(0,0,0,0.56);\r\n    }\r\n`;\r\n\r\nconst Boton = styled.input`\r\n    background-color: #CF3D95;\r\n    padding: .7rem;\r\n    display: block;\r\n    border: none;\r\n    color: #ffffff;\r\n    font-size: 1.8rem;\r\n    font-weight: 900;\r\n    text-transform: uppercase;\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n\r\n`;\r\n\r\n\r\nconst Formulario = ({guardarCitas, citas, editar, idpaciente, guardarEditar}) => {\r\n\r\n    const [paciente, guardarPaciente] = useState({\r\n        nombre: '',\r\n        edad: '',\r\n        telefono: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    });\r\n    const [editado, guardarEditado] = useState(false);\r\n\r\n    const [error, guardarError] = useState(false);\r\n    const {nombre, edad, telefono, fecha, hora, sintomas} = paciente;\r\n\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(citas).length > 0 && editar){\r\n            const datosFiltrados = citas.find(cita => cita.id === idpaciente);\r\n    \r\n            const{nombre, edad, telefono, fecha, hora, sintomas, id} = datosFiltrados;\r\n    \r\n            guardarPaciente({\r\n                nombre, \r\n                edad, \r\n                telefono,\r\n                fecha,\r\n                hora,\r\n                sintomas,\r\n                id\r\n            });\r\n        }\r\n    }, [editar, citas, idpaciente]);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(nombre.trim() === \"\" || edad.trim() === \"\" || telefono.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\"){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n        const datosIguales = citas.some(cita => cita.id === idpaciente); \r\n        if(datosIguales && editar){\r\n\r\n            const citasAct = citas.map(cita => {\r\n                if(cita.id === idpaciente){\r\n                    const citasNuevas = {...paciente}\r\n                    return citasNuevas;\r\n                }else{\r\n                    return cita;\r\n                }\r\n\r\n            });\r\n            guardarCitas([...citasAct]);\r\n            guardarEditar(false);\r\n            guardarEditado(true);\r\n            setTimeout(() => {\r\n                guardarEditado(false);\r\n            }, 3000);\r\n        }else{\r\n        // Pasando el paciente a las citas (state principal)\r\n        guardarCitas([\r\n            ...citas,\r\n            paciente\r\n        ])  \r\n        // Generando un id\r\n        paciente.id = shortid.generate();\r\n\r\n        }\r\n\r\n\r\n        // Reseteando el formulario\r\n\r\n        guardarPaciente({\r\n            nombre: '',\r\n            edad: '',\r\n            telefono: '',\r\n            fecha: '',\r\n            hora: '',\r\n            sintomas: '' \r\n        })\r\n\r\n    }\r\n\r\n \r\n\r\n\r\n    const onChange = e => {\r\n        // Pasando datos al objeto de paciente\r\n        guardarPaciente({\r\n            ...paciente,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    let textoBoton;\r\n    if(editar){\r\n        textoBoton=\"Editar Registro\";\r\n    }else{\r\n        textoBoton=\"Crear Cita\"\r\n    }\r\n\r\n\r\n    return ( \r\n        <Form\r\n\r\n        onSubmit={onSubmit}\r\n        >\r\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\r\n            {editado ? <Error mensaje=\"Editado Correctamente\" /> : null}\r\n            <h2>CREAR UNA CITA</h2>\r\n            <Labels htmlFor=\"nombre\">Nombre</Labels>\r\n            <Inputs\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                value={nombre}\r\n                onChange={onChange}\r\n            />\r\n            <Labels htmlFor=\"edad\">Edad</Labels>\r\n            <Inputs\r\n                type=\"number\"\r\n                name=\"edad\"\r\n                value={edad}\r\n                onChange={onChange}\r\n            />\r\n            <Labels htmlFor=\"telefono\">Teléfono</Labels>\r\n            <Inputs\r\n                type=\"tel\"\r\n                name=\"telefono\"\r\n                value={telefono}\r\n                onChange={onChange}\r\n            />\r\n            <Labels htmlFor=\"fecha\">Fecha</Labels>\r\n            <Inputs\r\n                type=\"date\"\r\n                name=\"fecha\"\r\n                value={fecha}\r\n                onChange={onChange}\r\n            />\r\n            <Labels htmlFor=\"hora\">Hora</Labels>\r\n            <Inputs\r\n                type=\"time\"\r\n                name=\"hora\"\r\n                value={hora}\r\n                onChange={onChange}\r\n     \r\n            />\r\n            <Labels htmlFor=\"sintomas\">Síntomas</Labels>\r\n            <TextArea \r\n            name=\"sintomas\"\r\n            value={sintomas}\r\n            onChange={onChange}\r\n\r\n            ></TextArea>\r\n            <Boton \r\n                type=\"submit\"\r\n                value={textoBoton}\r\n            />\r\n\r\n\r\n\r\n        </Form>\r\n     );\r\n}\r\n\r\n\r\nFormulario.propTypes = {\r\n    guardarCitas: PropTypes.func.isRequired,\r\n    citas: PropTypes.array.isRequired,\r\n    editar: PropTypes.bool.isRequired,\r\n    guardarEditar: PropTypes.func.isRequired,\r\n    idpaciente: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst CardCita = styled.div`\r\n    background-color: #ffffff;\r\n    padding: 1rem;\r\n    display: grid;\r\n    grid-template-rows: repeat(2, auto);\r\n    width: 95%;\r\n    margin-bottom: 2rem;\r\n    border-radius: 30px;\r\n\r\n    @media (min-width: 768px){\r\n        width: 70%\r\n    }\r\n\r\n    p{\r\n        font-size: 1.2rem;\r\n        font-weight: 700;\r\n        margin: .8rem 0; \r\n    }\r\n    span{\r\n        font-weight: 400;\r\n    }\r\n\r\n\r\n`;\r\n\r\nconst DatosFecha = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid #707070;\r\n\r\n`;\r\n\r\nconst Botones = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2,1fr);\r\n    column-gap: 4rem;\r\n    margin-bottom: 1rem;\r\n`;\r\nconst BotonEditar = styled.button`\r\n    background-color: #0073CF;\r\n    color: #ffffff;\r\n    border: none;\r\n    padding: .5rem;\r\n    border-radius: 5px;\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n\r\n`;\r\n\r\nconst BotonEliminar = styled.button`\r\n    background-color: #E20303;\r\n    color: #ffffff;\r\n    border: none;\r\n    padding: .5rem;\r\n    border-radius: 5px;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Sintomas = styled.div`\r\n    padding: .5rem;\r\n    border: 1px solid #707070;\r\n    margin-bottom: 1rem;\r\n    border-radius: 10px;\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst Cita = ({cita, eliminarCita, guardarEditar, guardarIdPaciente}) => {\r\n\r\n\r\n    const {nombre, edad, telefono, fecha, hora, sintomas, id} = cita;\r\n\r\n    return ( \r\n\r\n        <CardCita>\r\n            <DatosFecha>\r\n                <p>Fecha: <span>{fecha}</span></p>\r\n                <p>Hora: <span>{hora}</span></p>\r\n            </DatosFecha>\r\n            <div>\r\n                <p>Nombre: <span>{nombre}</span></p>\r\n                <p>Edad: <span>{edad}</span></p>\r\n                <p>Teléfono: <span>{telefono}</span></p>\r\n                <p>Síntomas:</p>\r\n                <Sintomas>\r\n                    <span>{sintomas}</span>\r\n                </Sintomas>\r\n                <Botones>\r\n                    <BotonEditar\r\n                    onClick={() => {\r\n                        guardarEditar(true)\r\n                        guardarIdPaciente(id);\r\n                    }}\r\n                    >Editar</BotonEditar>\r\n\r\n                    <BotonEliminar\r\n                        onClick={() => eliminarCita(id)}\r\n                    >Eliminar</BotonEliminar>\r\n                </Botones>\r\n            </div>\r\n        </CardCita>\r\n     );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired,\r\n    guardarEditar: PropTypes.func.isRequired,\r\n    guardarIdPaciente: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Cita;\r\n","import React, {Fragment} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Cita from './Cita';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TituloH2 = styled.h2`\r\n    text-align: center;\r\n    color: #ffffff;\r\n    font-size: 2.5rem;\r\n    text-transform: uppercase;\r\n\r\n`;\r\n\r\nconst DivCitas = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst Citas = ({citas, eliminarCita, guardarEditar, guardarIdPaciente}) => {\r\n\r\n\r\n    return ( \r\n\r\n        <Fragment >\r\n            <DivCitas>\r\n                {Object.keys(citas).length === 0 \r\n\r\n                ? \r\n                <TituloH2>No hay citas</TituloH2>\r\n                :\r\n                <TituloH2>Citas</TituloH2>\r\n                }\r\n\r\n                {citas.map(cita => (\r\n                    <Cita\r\n                        key={cita.id}\r\n                        cita={cita}\r\n                        eliminarCita={eliminarCita}\r\n                        guardarEditar={guardarEditar}\r\n                        guardarIdPaciente={guardarIdPaciente}\r\n                    />\r\n                ))}\r\n\r\n            </DivCitas>\r\n\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nCitas.propTypes = {\r\n    citas: PropTypes.array.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired,\r\n    guardarEditar: PropTypes.func.isRequired,\r\n    guardarIdPaciente: PropTypes.func.isRequired\r\n\r\n}\r\n \r\nexport default Citas;","import React, {Fragment, useState, useEffect} from 'react';\r\nimport Header from './components/Header';\r\nimport Formulario from './components/Formulario';\r\nimport Citas from './components/Citas';\r\n\r\nfunction App() {\r\n\r\n\r\nlet citasIniciales = JSON.parse(localStorage.getItem('Citas'));\r\nif(!citasIniciales){\r\n  citasIniciales = [];\r\n}\r\n\r\n  const [citas, guardarCitas] = useState(citasIniciales);\r\n  const [editar, guardarEditar] = useState(false);\r\n  const [idpaciente, guardarIdPaciente] = useState('');\r\n\r\n\r\n  const eliminarCita = id => {\r\n      const citaEliminada = citas.filter(cita => cita.id !== id);\r\n      guardarCitas(citaEliminada);\r\n  } \r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if(citasIniciales){\r\n      localStorage.setItem('Citas', JSON.stringify(citas));\r\n    }else{\r\n      localStorage.setItem('Citas', JSON.stringify([]))\r\n    }\r\n    \r\n  }, [citas, citasIniciales])\r\n\r\n  if(editar){\r\n    const contenido = document.querySelector('.contenido');\r\n    contenido.scrollIntoView({behavior: 'smooth'})\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n        <Header />\r\n        <div className=\"contenedor\">\r\n          <div className=\"contenido\">\r\n              <Formulario \r\n                guardarCitas={guardarCitas}\r\n                citas={citas}\r\n                editar={editar}\r\n                idpaciente={idpaciente}\r\n                guardarEditar={guardarEditar}\r\n              />\r\n              <Citas \r\n                citas={citas}\r\n                eliminarCita={eliminarCita}\r\n                guardarEditar={guardarEditar}\r\n                guardarIdPaciente={guardarIdPaciente}\r\n              />\r\n          </div>\r\n        </div>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}